postgresql:
  enabled: false

postgresql-ha:
  enabled: true

  volumePermissions:
    enabled: true

  postgresql:
    image:
      registry: sxwl-registry.cn-beijing.cr.aliyuncs.com
      repository: sxwl-ai/postgresql-repmgr-vector
      tag: "16.1.0"

    username: postgres
    password: yourpassword
    database: yourdb

    extendedConf: |
      wal_level = logical
      max_wal_senders = 10
      max_replication_slots = 10
      listen_addresses = '*'
      port = 5432
      archive_mode = on
      archive_command = 'mkdir -p /bitnami/postgresql/archive && test ! -f /bitnami/postgresql/archive/%f && cp %p /bitnami/postgresql/archive/%f'
      wal_keep_size = 1024

    initdbScripts:
      create-vector-extension.sql: |
        CREATE EXTENSION IF NOT EXISTS vector;

  pgpool:
    adminUsername: admin
    adminPassword: adminpassword
    replicaCount: 2
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 500m
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: pgpool
              topologyKey: kubernetes.io/hostname
            weight: 1

  persistence:
    enabled: true
    storageClass: openebs-cstor
    size: 10Gi

  replicaCount: 3  # 1主 + 2从
  resources:
    requests:
      memory: 512Mi
      cpu: 200m
    limits:
      memory: 1Gi
      cpu: 500m

  replication:
    enabled: true
    user: repmgr
    password: repmgrpassword

  tls:
    enabled: false

  service:
    type: ClusterIP
    port: 5432

redis:
  architecture: replication
  image:
    tag: 6.2.14-debian-11-r8
  auth:
    enabled: true
    password: "redis-password" # 添加认证
  sentinel:
    enabled: true
    replicas: 3
    downAfterMilliseconds: 5000
    failoverTimeout: 10000
    parallelSyncs: 1
  persistence:
    enabled: true
    storageClass: openebs-cstor
    size: 5Gi
  replica:
    replicaCount: 3
    configuration: |
      appendonly yes
      appendfsync everysec
    persistence:
      storageClass: openebs-cstor
      size: 5Gi
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: redis
        topologyKey: kubernetes.io/hostname

rabbitmq:
  image:
    tag: 3.13.1-debian-12-r1
  replicaCount: 3
  clustering:
    enabled: true
  persistence:
    storageClass: openebs-cstor
    size: 5Gi
  extraConfiguration: |
    loopback_users.guest = false
    default_permissions.configure = .*
    default_permissions.write = .*
    default_permissions.read = .*
    cluster_partition_handling = autoheal
    queue_master_locator = min-masters
    default_vhost = /
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: rabbitmq
            app.kubernetes.io/instance: openebs-stack
        topologyKey: kubernetes.io/hostname

kafka:
  kraft:
    enabled: true
    combinedMode: true
  controller:
    replicaCount: 3  # 确保有3个controller节点
    persistence:
      enabled: true
      storageClass: openebs-cstor
      size: 20Gi
  broker:
    replicaCount: 0  # 在combinedMode为true时设为0，避免创建额外的broker pod
  persistence:
    enabled: true
    storageClass: openebs-cstor
    size: 20Gi
  auth:
    enabled: true
    clientProtocol: sasl
    interBrokerProtocol: sasl
  resources:
    requests:
      memory: 4Gi
      cpu: 1
    limits:
      memory: 8Gi
      cpu: 2
  heapOpts: "-Xms2G -Xmx4G"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: kafka
        topologyKey: kubernetes.io/hostname

kafkaConnect:
  enabled: true
  image: sxwl-registry.cn-beijing.cr.aliyuncs.com/sxwl-ai/kafka-connect-debezium:latest
  bootstrapServers: openebs-stack-kafka:9092
  replicaCount: 3
  extraEnvVars:
    - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
      value: "3"
    - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
      value: "3"
    - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
      value: "3"
    - name: CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE
      value: "true"
    - name: CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE
      value: "true"
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: kafka-connect
        topologyKey: kubernetes.io/hostname

quickwit:
  enabled: true
  replicaCount: 3
  pvcSize: 5Gi
  storagePath: /quickwit/indexes
  storageClass: openebs-cstor
  image: quickwit/quickwit:0.8.1
  extraEnvVars:
    - name: QW_NODE_ID
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: QW_METASTORE_URI
      value: postgres://postgres:yourpassword@openebs-stack-postgresql-ha-pgpool:5432/yourdb
    - name: QW_LISTEN_ADDRESS
      value: 0.0.0.0
    - name: QW_REST_LISTEN_PORT
      value: "7280"
    - name: QW_GOSSIP_LISTEN_PORT
      value: "7280"
    - name: QW_CLUSTER_ID
      value: quickwit-cluster
    # MinIO配置
    - name: QW_INDEX_STORE_TYPE
      value: "s3"
    - name: QW_DEFAULT_INDEX_ROOT_URI
      value: "s3://quickwit-indexes"
    - name: QW_S3_FLAVOR
      value: "minio"
    - name: QW_S3_ENDPOINT
      value: "http://minio:9000"
    - name: QW_S3_DISABLE_SSL
      value: "true"
    - name: QW_LOG
      value: "quickwit_storage=debug"
    - name: QW_S3_REGION
      value: "us-east-1"
    - name: AWS_REGION
      value: us-east-1
    - name: AWS_DEFAULT_REGION
      value: us-east-1
    - name: QW_S3_FORCE_PATH_STYLE_ACCESS
      value: "true"
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: minio-credentials
          key: access_key
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: minio-credentials
          key: secret_key
    - name: QW_S3_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: minio-credentials
          key: access_key
    - name: QW_S3_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: minio-credentials
          key: secret_key
    # 缓存配置
    - name: QW_CACHE_DIRECTORY
      value: "/quickwit/data/cache"
    - name: QW_MAX_CACHE_SIZE_MB
      value: "1024"  # 1GB缓存
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: quickwit
        topologyKey: kubernetes.io/hostname